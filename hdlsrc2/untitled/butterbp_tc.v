// -------------------------------------------------------------
// 
// File Name: hdlsrc2/untitled/butterbp_tc.v
// Created: 2020-12-08 10:07:10
// 
// Generated by MATLAB 9.9 and HDL Coder 3.17
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: butterbp_tc
// Source Path: butterbp_tc
// Hierarchy Level: 1
// 
// Master clock enable input: clk_enable
// 
// enb_8_1_1   : identical to clk_enable
// enb         : 8x slower than clk with last phase
// enb_1_1_1   : 8x slower than clk with phase 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module butterbp_tc
          (clk,
           reset,
           clk_enable,
           enb_8_1_1,
           enb,
           enb_1_1_1);


  input   clk;
  input   reset;
  input   clk_enable;
  output  enb_8_1_1;
  output  enb;
  output  enb_1_1_1;


  reg [2:0] count8;  // ufix3
  wire phase_all;
  reg  phase_0;
  wire phase_0_tmp;
  reg  phase_1;
  wire phase_1_tmp;


  always @ (posedge clk)
    begin: Counter8
      if (reset == 1'b1) begin
        count8 <= 3'b001;
      end
      else begin
        if (clk_enable == 1'b1) begin
          if (count8 >= 3'b111) begin
            count8 <= 3'b000;
          end
          else begin
            count8 <= count8 + 3'b001;
          end
        end
      end
    end // Counter8

  assign phase_all = clk_enable ? 1'b1 : 1'b0;

  always @ ( posedge clk)
    begin: temp_process1
      if (reset == 1'b1) begin
        phase_0 <= 1'b0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          phase_0 <= phase_0_tmp;
        end
      end
    end // temp_process1

  assign  phase_0_tmp = (count8 == 3'b111 && clk_enable == 1'b1) ? 1'b1 : 1'b0;

  always @ ( posedge clk)
    begin: temp_process2
      if (reset == 1'b1) begin
        phase_1 <= 1'b1;
      end
      else begin
        if (clk_enable == 1'b1) begin
          phase_1 <= phase_1_tmp;
        end
      end
    end // temp_process2

  assign  phase_1_tmp = (count8 == 3'b000 && clk_enable == 1'b1) ? 1'b1 : 1'b0;

  assign enb_8_1_1 =  phase_all & clk_enable;

  assign enb =  phase_0 & clk_enable;

  assign enb_1_1_1 =  phase_1 & clk_enable;


endmodule  // butterbp_tc

